"use strict";(self.webpackChunk_rocket_chat_fuselage=self.webpackChunk_rocket_chat_fuselage||[]).push([[2670],{"./src/components/PositionAnimated/PositionAnimated.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,bottomEnd:()=>bottomEnd,bottomMiddle:()=>bottomMiddle,bottomStart:()=>bottomStart,default:()=>__WEBPACK_DEFAULT_EXPORT__,leftEnd:()=>leftEnd,leftMiddle:()=>leftMiddle,leftStart:()=>leftStart,rightEnd:()=>rightEnd,rightMiddle:()=>rightMiddle,rightStart:()=>rightStart,topEnd:()=>topEnd,topMiddle:()=>topMiddle,topStart:()=>topStart});__webpack_require__("../../node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("../../node_modules/core-js/modules/es.object.assign.js");var react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/react/index.js"),___WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Layout/PositionAnimated",component:___WEBPACK_IMPORTED_MODULE_3__.GGA,parameters:{layout:"centered"},args:{visible:___WEBPACK_IMPORTED_MODULE_3__.pdH.VISIBLE}};var Template=function Template(_ref){var visible=_ref.visible,placement=_ref.placement,ref=(0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(___WEBPACK_IMPORTED_MODULE_3__.n9L,{padding:12,ref,children:"Anchor element"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(___WEBPACK_IMPORTED_MODULE_3__.GGA,{anchor:ref,visible,placement,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(___WEBPACK_IMPORTED_MODULE_3__.n9L,{children:"Positioned element"})})]})},topStart=Template.bind({});topStart.args={placement:"top-start"};var topMiddle=Template.bind({});topMiddle.args={placement:"top-middle"};var topEnd=Template.bind({});topEnd.args={placement:"top-end"};var bottomStart=Template.bind({});bottomStart.args={placement:"bottom-start"};var bottomMiddle=Template.bind({});bottomMiddle.args={placement:"bottom-middle"};var bottomEnd=Template.bind({});bottomEnd.args={placement:"bottom-end"};var rightStart=Template.bind({});rightStart.args={placement:"right-start"};var rightMiddle=Template.bind({});rightMiddle.args={placement:"right-middle"};var rightEnd=Template.bind({});rightEnd.args={placement:"right-end"};var leftStart=Template.bind({});leftStart.args={placement:"left-start"};var leftMiddle=Template.bind({});leftMiddle.args={placement:"left-middle"};var leftEnd=Template.bind({});leftEnd.args={placement:"left-end"},topStart.parameters=Object.assign({storySource:{source:"({\n  visible,\n  placement,\n}) => {\n  const ref = useRef<HTMLElement>(null);\n\n  return (\n    <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <PositionAnimated anchor={ref} visible={visible} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </PositionAnimated>\n    </>\n  );\n}"}},topStart.parameters),topMiddle.parameters=Object.assign({storySource:{source:"({\n  visible,\n  placement,\n}) => {\n  const ref = useRef<HTMLElement>(null);\n\n  return (\n    <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <PositionAnimated anchor={ref} visible={visible} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </PositionAnimated>\n    </>\n  );\n}"}},topMiddle.parameters),topEnd.parameters=Object.assign({storySource:{source:"({\n  visible,\n  placement,\n}) => {\n  const ref = useRef<HTMLElement>(null);\n\n  return (\n    <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <PositionAnimated anchor={ref} visible={visible} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </PositionAnimated>\n    </>\n  );\n}"}},topEnd.parameters),bottomStart.parameters=Object.assign({storySource:{source:"({\n  visible,\n  placement,\n}) => {\n  const ref = useRef<HTMLElement>(null);\n\n  return (\n    <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <PositionAnimated anchor={ref} visible={visible} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </PositionAnimated>\n    </>\n  );\n}"}},bottomStart.parameters),bottomMiddle.parameters=Object.assign({storySource:{source:"({\n  visible,\n  placement,\n}) => {\n  const ref = useRef<HTMLElement>(null);\n\n  return (\n    <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <PositionAnimated anchor={ref} visible={visible} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </PositionAnimated>\n    </>\n  );\n}"}},bottomMiddle.parameters),bottomEnd.parameters=Object.assign({storySource:{source:"({\n  visible,\n  placement,\n}) => {\n  const ref = useRef<HTMLElement>(null);\n\n  return (\n    <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <PositionAnimated anchor={ref} visible={visible} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </PositionAnimated>\n    </>\n  );\n}"}},bottomEnd.parameters),rightStart.parameters=Object.assign({storySource:{source:"({\n  visible,\n  placement,\n}) => {\n  const ref = useRef<HTMLElement>(null);\n\n  return (\n    <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <PositionAnimated anchor={ref} visible={visible} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </PositionAnimated>\n    </>\n  );\n}"}},rightStart.parameters),rightMiddle.parameters=Object.assign({storySource:{source:"({\n  visible,\n  placement,\n}) => {\n  const ref = useRef<HTMLElement>(null);\n\n  return (\n    <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <PositionAnimated anchor={ref} visible={visible} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </PositionAnimated>\n    </>\n  );\n}"}},rightMiddle.parameters),rightEnd.parameters=Object.assign({storySource:{source:"({\n  visible,\n  placement,\n}) => {\n  const ref = useRef<HTMLElement>(null);\n\n  return (\n    <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <PositionAnimated anchor={ref} visible={visible} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </PositionAnimated>\n    </>\n  );\n}"}},rightEnd.parameters),leftStart.parameters=Object.assign({storySource:{source:"({\n  visible,\n  placement,\n}) => {\n  const ref = useRef<HTMLElement>(null);\n\n  return (\n    <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <PositionAnimated anchor={ref} visible={visible} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </PositionAnimated>\n    </>\n  );\n}"}},leftStart.parameters),leftMiddle.parameters=Object.assign({storySource:{source:"({\n  visible,\n  placement,\n}) => {\n  const ref = useRef<HTMLElement>(null);\n\n  return (\n    <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <PositionAnimated anchor={ref} visible={visible} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </PositionAnimated>\n    </>\n  );\n}"}},leftMiddle.parameters),leftEnd.parameters=Object.assign({storySource:{source:"({\n  visible,\n  placement,\n}) => {\n  const ref = useRef<HTMLElement>(null);\n\n  return (\n    <>\n      <Tile padding={12} ref={ref}>\n        Anchor element\n      </Tile>\n      <PositionAnimated anchor={ref} visible={visible} placement={placement}>\n        <Tile>Positioned element</Tile>\n      </PositionAnimated>\n    </>\n  );\n}"}},leftEnd.parameters);var __namedExportsOrder=["topStart","topMiddle","topEnd","bottomStart","bottomMiddle","bottomEnd","rightStart","rightMiddle","rightEnd","leftStart","leftMiddle","leftEnd"]}}]);